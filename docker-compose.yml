version: '3'

services:
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_USERNAME=$rushabh 
      - MONGO_PASSWORD=$Rushabh@123
      - MONGO_HOSTNAME=testmango
      - MONGO_PORT=$27017
      - MONGO_DB=$mydb
    ports:
      - "80:8080"
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    networks:
      - app-network
    command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon app.js 

  db:
    image: mongo:4.1.8-xenial
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$root
      - MONGO_INITDB_ROOT_PASSWORD=$redhat
    volumes:     
[node1] (local) root@192.168.0.13 ~/demo-assignment-docker
$ cat d
db_connections/     docker-compose.yml  
[node1] (local) root@192.168.0.13 ~/demo-assignment-docker
$ cat docker-compose.yml 
version: '3'

services:
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_USERNAME=$rushabh 
      - MONGO_PASSWORD=$Rushabh@123
      - MONGO_HOSTNAME=testmango
      - MONGO_PORT=$27017
      - MONGO_DB=$mydb
    ports:
      - "80:8080"
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    networks:
      - app-network
    command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon app.js 

  db:
    image: mongo:4.1.8-xenial
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$root
      - MONGO_INITDB_ROOT_PASSWORD=$redhat
    volumes:     
      - dbdata:/root/demo-assignment-docker/db_connections/
    networks:
      - app-network  

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  node_modules:
